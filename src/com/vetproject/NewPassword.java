package com.vetproject;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Statement;

public class NewPassword implements ActionListener {
    JFrame frame;
    JPanel panel;
    JLabel title, passwordLabel, confPasswordLabel, messageLabel;
    JPasswordField passwordField, confPasswordField;
    JButton firstBtn,exitBtn;

    NewPassword() {
        frame = new JFrame();
        frame = new JFrame();
        frame.getContentPane().setLayout(null);
        frame.setUndecorated(true);
        frame.setSize(400,200);
        frame.setLocationRelativeTo(null);
        frame.getContentPane().setBackground(Color.white);
        frame.setLayout(null);

        title = new JLabel("Reset password");
        panel = new JPanel();
        panel.setBounds(0,0,400,30);
        panel.setBackground(Color.white);
        panel.setLayout(null);
        title.setForeground(new Color(132,173,41));
        title.setFont(new Font("Ink Free",Font.BOLD,20));
        title.setBounds(110,10,200,20);

        exitBtn = new JButton(new ImageIcon("exitbtn.jpg"));
        exitBtn.setBounds(370,10,23,23);
        exitBtn.setBorder(BorderFactory.createLineBorder(Color.white));
        exitBtn.addActionListener(this);

        panel.add(title);
        panel.add(exitBtn);
        frame.add(panel);

        passwordLabel = new JLabel("New Password");
        passwordField = new JPasswordField();
        passwordLabel.setBounds(140,60,200,15);
        passwordLabel.setFont(new Font("Ink Free",Font.BOLD,15));
        passwordLabel.setForeground(Color.BLACK);
        passwordField.setBounds(80,80,250,18);
        passwordField.setForeground(Color.BLACK);
        frame.add(passwordLabel);
        frame.add(passwordField);

        confPasswordLabel = new JLabel("Confirm Password");
        confPasswordField = new JPasswordField();
        confPasswordLabel.setBounds(130,110,200,15);
        confPasswordLabel.setFont(new Font("Ink Free",Font.BOLD,15));
        confPasswordLabel.setForeground(Color.BLACK);
        confPasswordField.setBounds(80,130,250,18);
        confPasswordField.setForeground(Color.BLACK);
        frame.add(confPasswordLabel);
        frame.add(confPasswordField);

        firstBtn = new JButton("Reset Password");
        firstBtn.setBounds(130,160,150,22);
        firstBtn.setForeground(Color.white);
        firstBtn.setBackground(new Color(132,173,41));
        firstBtn.addActionListener(this);
        frame.add(firstBtn);

        messageLabel = new JLabel();
        messageLabel.setForeground(new Color(182,37,37));
        messageLabel.setFont(new Font("Ink Free",Font.BOLD,12));
        messageLabel.setBounds(70,35,400,20);
        frame.add(messageLabel);

        frame.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource() == exitBtn) {
            frame.dispose();
        }

        if(e.getSource() == firstBtn &&
                !new String(passwordField.getPassword()).equals(new String(confPasswordField.getPassword()))) {
            messageLabel.setText("Try again! Passwords do not match!");
            passwordField.setBorder(BorderFactory.createLineBorder(new Color(182, 37, 37)));
            confPasswordField.setBorder(BorderFactory.createLineBorder(new Color(182, 37, 37)));
        } else if (e.getSource() == firstBtn) {
            resetPassword();
            frame.dispose();
            FinishFrame frame = new FinishFrame();
        }

    }

    //updates the password in database
    public void resetPassword() {
        DataBaseConnection connection = new DataBaseConnection();
        Connection connectDB = connection.getConnection();

        //encrypts new password
        String password = PasswordSecurity.encrypt(new String(passwordField.getPassword()));
        String id = ResetPassword.getID();

        String fields = "UPDATE registration SET password = '" + password + "' WHERE autogeneratedid = '" + id + "'";


        try {
            Statement stDB = connectDB.createStatement();
            stDB.executeUpdate(fields);
            connectDB.close();

        } catch(Exception e){
            e.printStackTrace();
            e.getCause();

        }
    }
}
